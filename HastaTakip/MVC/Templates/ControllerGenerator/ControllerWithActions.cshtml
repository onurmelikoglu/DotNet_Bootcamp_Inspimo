@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

@{string modelName = (Model.ClassName.EndsWith("Controller")? Model.ClassName.Substring(0,Model.ClassName.Length-10): Model.ClassName);}
namespace @Model.NamespaceName
{
    public class @Model.ClassName : Controller
    {
        // TODO: Add service injections here

        // GET: @modelName
        public async Task<IActionResult> Index()
        {
            // TODO: Add get collection service logic here
            return View();
        }

        // GET: @modelName/Details/5
        public async Task<IActionResult> Details(int id)
        {
            // TODO: Add get item service logic here
            return View();
        }

        // GET: @modelName/Create
        public async Task<IActionResult> Create()
        {
            // TODO: Add get related items service logic here to set ViewData if necessary
            return View();
        }

        // POST: @modelName/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Create(IFormCollection collection)
        {
            // TODO: Add insert service logic here
            return RedirectToAction(nameof(Index));
            
            // TODO: Add get related items service logic here to set ViewData if necessary
            return View();
        }

        // GET: @modelName/Edit/5
        public async Task<IActionResult> Edit(int id)
        {
            // TODO: Add get item service logic here

            // TODO: Add get related items service logic here to set ViewData if necessary
            return View();
        }

        // POST: @modelName/Edit/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Edit(int id, IFormCollection collection)
        {
            // TODO: Add update service logic here
            return RedirectToAction(nameof(Index));
            
            // TODO: Add get related items service logic here to set ViewData if necessary
            return View();
        }

        // GET: @modelName/Delete/5
        public async Task<IActionResult> Delete(int id)
        {
            // TODO: Add get item service logic here
            return View();
        }

        // POST: @modelName/Delete/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        [ActionName("Delete")]
        public async Task<IActionResult> DeleteConfirmed(int id)
        {
            // TODO: Add delete service logic here
            return RedirectToAction(nameof(Index));
        }
    }
}